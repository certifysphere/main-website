"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8918],{2654:e=>{e.exports=JSON.parse('{"label":"Terraform","permalink":"/main-website/docs/tags/terraform","allTagsPath":"/main-website/docs/tags","count":2,"items":[{"id":"labs/workshops/react-springboot-Workshop/spring-rest-api--docker-aws-ecs-terraform-part-2","title":"Deploy Spring REST API to AWS ECS Fargate - Terraform - Part-2","description":"This chapter is a continuation of the previous chapter, Dockerized Java Spring Boot Rest API - Part-1. In the previous chapter, we completed several tasks to set up our environment for deploying our Spring Boot Rest API on AWS. These tasks included:","permalink":"/main-website/docs/labs/workshops/react-springboot-Workshop/spring-rest-api--docker-aws-ecs-terraform-part-2"},{"id":"labs/workshops/react-springboot-Workshop/dockerized-spring-boot-rest-api","title":"Dockerized SpringBoot Java App","description":"In this chapter, we will learn how to deploy a Java Spring Boot REST API to AWS Lambda as a Docker container using Terraform. We will also explore how to expose the API endpoint using AWS API Gateway.","permalink":"/main-website/docs/labs/workshops/react-springboot-Workshop/dockerized-spring-boot-rest-api"}]}')}}]);