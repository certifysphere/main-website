"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6235],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),c=o,h=m["".concat(s,".").concat(c)]||m[c]||d[c]||i;return n?a.createElement(h,r(r({ref:t},u),{},{components:n})):a.createElement(h,r({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),o=(n(7294),n(3905));const i={sidebar_position:5,id:"modules-and-packages.",title:"Modules and Packages",tags:["Python","Modules and Packages"]},r=void 0,l={unversionedId:"tuts/tutorials/programming/python/modules-and-packages.",id:"tuts/tutorials/programming/python/modules-and-packages.",title:"Modules and Packages",description:"In Python, modules and packages are used to organize and reuse code. A module is a file containing Python definitions and statements, while a package is a directory that contains multiple modules. In this section, we'll explore how to create and use modules and packages effectively.",source:"@site/docs/tuts/tutorials/programming/python/5-modules-packages.md",sourceDirName:"tuts/tutorials/programming/python",slug:"/tuts/tutorials/programming/python/modules-and-packages.",permalink:"/docs/tuts/tutorials/programming/python/modules-and-packages.",draft:!1,tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Modules and Packages",permalink:"/docs/tags/modules-and-packages"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,id:"modules-and-packages.",title:"Modules and Packages",tags:["Python","Modules and Packages"]},sidebar:"tutorialSidebar",previous:{title:"Object-Oriented Programming (OOP)",permalink:"/docs/tuts/tutorials/programming/python/object-oriented-programming"},next:{title:"Error Handling and Exception Handling",permalink:"/docs/tuts/tutorials/programming/python/error-handling-and-exception-handling"}},s={},p=[{value:"Creating and Importing Modules",id:"creating-and-importing-modules",level:3},{value:"Importing Specific Functions or Variables",id:"importing-specific-functions-or-variables",level:3},{value:"Creating and Importing Packages",id:"creating-and-importing-packages",level:3},{value:"Python provided Modules and Libraries",id:"python-provided-modules-and-libraries",level:3},{value:"Summary",id:"summary",level:3},{value:"Github Repo",id:"github-repo",level:3}],u={toc:p},m="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In Python, modules and packages are used to organize and reuse code. A module is a file containing Python definitions and statements, while a package is a directory that contains multiple modules. In this section, we'll explore how to create and use modules and packages effectively."),(0,o.kt)("h3",{id:"creating-and-importing-modules"},"Creating and Importing Modules"),(0,o.kt)("p",null,"To create a module, you simply create a Python file with the desired functions, classes, or variables. Let's say we have a module called ",(0,o.kt)("inlineCode",{parentName:"p"},"math_operations.py")," with some mathematical operations:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# math_operations.py\n\ndef add(x, y):\n    return x + y\n\ndef subtract(x, y):\n    return x - y\n\ndef multiply(x, y):\n    return x * y\n\ndef divide(x, y):\n    return x / y\n")),(0,o.kt)("p",null,"To use the functions from this module in another Python file, you need to import it. Here's an example of importing and using the module:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# main.py\n\nimport math_operations\n\nresult = math_operations.add(5, 3)\nprint(result)  # Output: 8\n")),(0,o.kt)("p",null,"In the above code, we import the ",(0,o.kt)("inlineCode",{parentName:"p"},"math_operations")," module using the ",(0,o.kt)("inlineCode",{parentName:"p"},"import")," statement. We can then access the functions from the module using the module name followed by the function name."),(0,o.kt)("h3",{id:"importing-specific-functions-or-variables"},"Importing Specific Functions or Variables"),(0,o.kt)("p",null,"Sometimes you may only need to import specific functions or variables from a module instead of importing the entire module. You can do this using the ",(0,o.kt)("inlineCode",{parentName:"p"},"from")," statement. Here's an example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# main.py\n\nfrom math_operations import add, subtract\n\nresult = add(5, 3)\nprint(result)  # Output: 8\n\nresult = subtract(5, 3)\nprint(result)  # Output: 2\n")),(0,o.kt)("p",null,"In the above code, we import only the ",(0,o.kt)("inlineCode",{parentName:"p"},"add")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"subtract")," functions from the ",(0,o.kt)("inlineCode",{parentName:"p"},"math_operations")," module using the ",(0,o.kt)("inlineCode",{parentName:"p"},"from")," statement. We can directly use these functions without referencing the module name."),(0,o.kt)("h3",{id:"creating-and-importing-packages"},"Creating and Importing Packages"),(0,o.kt)("p",null,"A package is a directory that contains multiple Python modules. It allows you to organize related modules into a hierarchical structure. To create a package, you simply create a directory with an empty file called ",(0,o.kt)("inlineCode",{parentName:"p"},"__init__.py"),". Here's an example of a package structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"my_package/\n    __init__.py\n    module1.py\n    module2.py\n")),(0,o.kt)("p",null,"In the above example, ",(0,o.kt)("inlineCode",{parentName:"p"},"my_package")," is the package directory, and ",(0,o.kt)("inlineCode",{parentName:"p"},"module1.py")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"module2.py")," are the module files within the package."),(0,o.kt)("p",null,"To import modules from a package, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"import")," statement. Here's an example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# main.py\n\nimport my_package.module1\nimport my_package.module2\n\nresult = my_package.module1.add(5, 3)\nprint(result)  # Output: 8\n\nresult = my_package.module2.subtract(5, 3)\nprint(result)  # Output: 2\n")),(0,o.kt)("p",null,"In the above code, we import the modules ",(0,o.kt)("inlineCode",{parentName:"p"},"module1")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"module2")," from the ",(0,o.kt)("inlineCode",{parentName:"p"},"my_package")," package. We can then access the functions from these modules using the package name followed by the module name and the function name."),(0,o.kt)("h3",{id:"python-provided-modules-and-libraries"},"Python provided Modules and Libraries"),(0,o.kt)("p",null,"Python provides a vast collection of modules and libraries that extend its functionality and make it easier to work with files, perform input/output operations, and more. Modules are Python files containing reusable code, while libraries are collections of modules that serve specific purposes."),(0,o.kt)("p",null,"To use a module or library in your Python code, you need to import it first. Here's an example of importing the ",(0,o.kt)("inlineCode",{parentName:"p"},"os")," module, which provides functions for interacting with the operating system:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'import os\n\n# Using functions from the os module\ncurrent_directory = os.getcwd()\nprint(current_directory)\n\nfile_exists = os.path.exists("myfile.txt")\nprint(file_exists)\n')),(0,o.kt)("p",null,"In the above code, we import the ",(0,o.kt)("inlineCode",{parentName:"p"},"os")," module using the ",(0,o.kt)("inlineCode",{parentName:"p"},"import")," statement. We then use functions from the ",(0,o.kt)("inlineCode",{parentName:"p"},"os")," module, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"getcwd()")," to get the current working directory and ",(0,o.kt)("inlineCode",{parentName:"p"},"path.exists()")," to check if a file exists."),(0,o.kt)("p",null,"Python also allows you to import specific functions or classes from a module using the ",(0,o.kt)("inlineCode",{parentName:"p"},"from")," keyword. Here's an example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from math import sqrt\n\nresult = sqrt(25)\nprint(result)\n")),(0,o.kt)("p",null,"In the above code, we import only the ",(0,o.kt)("inlineCode",{parentName:"p"},"sqrt()")," function from the ",(0,o.kt)("inlineCode",{parentName:"p"},"math")," module. This allows us to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"sqrt()")," function directly without referencing the module name."),(0,o.kt)("p",null,"Besides the built-in modules, Python has a vast ecosystem of third-party libraries that provide additional functionality for various domains and purposes. Some popular libraries include:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"NumPy"),": A library for numerical computing with arrays and matrices."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Pandas"),": A library for data manipulation and analysis."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Matplotlib"),": A library for creating visualizations and plots."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Requests"),": A library for making HTTP requests."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BeautifulSoup"),": A library for web scraping and parsing HTML/XML documents."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Django"),": A web framework for building web applications."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Flask"),": A lightweight web framework for building web applications.")),(0,o.kt)("p",null,"To use these libraries, you need to install them first using a package manager like ",(0,o.kt)("inlineCode",{parentName:"p"},"pip"),". Once installed, you can import and utilize their functionalities in your Python code."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\n\narr = np.array([1, 2, 3, 4, 5])\nmean = np.mean(arr)\nprint(mean)\n")),(0,o.kt)("p",null,"In the above code, we import the ",(0,o.kt)("inlineCode",{parentName:"p"},"numpy")," library and use the ",(0,o.kt)("inlineCode",{parentName:"p"},"mean()")," function from the ",(0,o.kt)("inlineCode",{parentName:"p"},"numpy")," module to calculate the mean of an array."),(0,o.kt)("p",null,"By leveraging modules and libraries, you can tap into a wide range of pre-built functionality, save time, and enhance your Python programs' capabilities."),(0,o.kt)("h3",{id:"summary"},"Summary"),(0,o.kt)("p",null,"In this section, we covered modules and packages in Python. Modules are used to organize code within a single file, while packages allow you to organize related modules into a directory structure. We learned how to create and import modules, as well as create and import packages. This knowledge is crucial for code reuse and maintaining a well-structured project. In the next section, we'll explore error handling and exception handling in Python."),(0,o.kt)("h3",{id:"github-repo"},"Github Repo"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"  You can refer to and clone the code samples for this tutorial from the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/certifysphere/python-code-samples"},"GitHub repository"),"."),(0,o.kt)("p",{parentName:"admonition"},"  To clone the repository, you can use the following command:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/certifysphere/python-code-samples.git\n")),(0,o.kt)("p",{parentName:"admonition"},"  You can then navigate to the ",(0,o.kt)("inlineCode",{parentName:"p"},"/src")," directory to access all the code samples given in this tutorial. ")))}d.isMDXComponent=!0}}]);